id,dateiIn,dateiOut,alias,description,snippet,humanCompn_rbase_max_000,N,N,n_rbase_max_000,returns the max of a set of numbers,N <- as.data.frame(x = list(N=max(df))),maximumn_rbase_min_000,N,N,n_rbase_min_000,returns the min of a set of numbers,N <- as.data.frame(x = list(N=min(df))),minimumn_rbase_abs_000,N,N,n_rbase_abs_000,returns the absolute set of absolute values,N <- as.data.frame(x = list(N=abs(df))),absolute valuen_rbase_range_000,N,N,n_rbase_range_000,returns the range of the set,N <- as.data.frame(x = list(N=range(df))),rangen_rbase_reverse_000,N,N,n_rbase_reverse_000,reverses the order of the set,N <- as.data.frame(x = list(N=rev(df))),NAn_rbase_sign_000,N,N,n_rbase_sign_000,returns the signs of set,N <- as.data.frame(x = list(N=sign(df))),NAn_rbase_sort_000,N,N,n_rbase_sort_000,returns the values of the set sorted from least to most,N <- as.data.frame(x = list(N=sort(df$N))),NAn_rbase_sort_001,N,N,n_rbase_sort_001,returns the indexes of the set sorted from the least to most,N <- as.data.frame(x = list(N=order(df$N))),ordern_rbase_unique_001,N,N,n_rbase_unique_001,Remove duplicate entries from the set,N <- as.data.frame(x = list(N=unique(df))),uniquen_rbase_standarddeviation_000,N,N,n_rbase_standarddeviation_000,returns the standard deviation of the set,N <- as.data.frame(x = list(N=sd(df$N))),standard deviationn_rbase_standard-deviation_000,N,N,n_rbase_standard-deviation_000,returns the variance of the set,N <- as.data.frame(x = list(N=var(df$N))),variancen_rbase_quantiles_000,N,N,n_rbase_quantiles_000,returns the value of the quantiles of the set,N <- as.data.frame(x = list(N=quantile(df$N))),quantilesn_rbase_lagdiff_000,N,N,n_rbase_lagdiff_000,returns the set of lagged differences,N <- as.data.frame(x = list(N=diff(df$N))),first differencen_rbase_sum_000,N,N,n_rbase_sum_000,return the sum,N <- as.data.frame(x = list(N=sum(df$N))),sumn_rbase_mean_000,N,N,n_rbase_mean_000,returns the mean,N <- as.data.frame(x = list(N=mean(df$N))),meann_rbase_median_000,N,N,n_rbase_median_000,returns the median,N <- as.data.frame(x = list(N=median(df$N))),mediann_rbase_cumsum_000,N,N,n_rbase_cumsum_000,returns a data frame with cumulative sum of the set,N <- as.data.frame(x = list(N=cumsum(df$N))),cummulative sumn_rbase_cumprod_000,N,N,n_rbase_cumprod_000,returns a data frame with cumulative produt of the set,N <- as.data.frame(x = list(N=cumprod(df$N))),cummulative productn_rbase_cumin_000,N,N,n_rbase_cumin_000,returns a data frame with cumulative minium value of the set,N <- as.data.frame(x = list(N=cummin(df$N))),cummulative maximumn_rbase_cummax_000,N,N,n_rbase_cummax_000,returns a data frame with cumulative maximum value of the set,N <- as.data.frame(x = list(N=cummax(df$N))),cummulative minimumc_rbase_sort_000,C,C,c_rbase_sort_000,returns the values of the set sorted from least to most,C <- as.data.frame(x = list(N=sort(df$C))),countc_rbase_sort_001,C,C,c_rbase_sort_001,returns the indexes of the set sorted from the least to most,C <- as.data.frame(x = list(N=order(df))),countc_rbase_hist_000,C,CN,c_rbase_hist_000,Count the number of appearances,"CN <- count(df, ""C"")",countnn_rbase_rowsum_000,NN,N,nn_rbase_rowsum_000,Calculates the sum by row,N <- as.data.frame(x = list(N = rowSums(df))),row sumnn_rbase_rowmean_000,NN,N,nn_rbase_rowmean_000,Calculates the mean by row,N <- as.data.frame(x = list(N = rowMeans(df))),row meannn_rbase_correlation_000,NN,N,nn_rbase_correlation_000,Calculates the correlation of N1 and N2,"N <- as.data.frame(x = list(N =cor(df$N1, df$N2)))",correlationnn_rbase_covariance_000,NN,N,nn_rbase_covariance_000,Calculates the covariance of N1 and N2,"N <- as.data.frame(x = list(N =cov(df$N1, df$N2)))",covariancecdn_plyr_agg_sum_000,CDN,CN,cdn_plyr_agg_sum_000,Aggregate total sum of C over all periods,"ddply(df, c(""a""), summarise, sum_agg = sum(c))",total by CVARcdn_plyr_agg_sum_001,CDN,CN,cdn_plyr_agg_sum_001,Aggregate total sum of C over all periods ordered descending,"    dfout <- ddply(df, c(""a""), summarise, sum_agg = sum(c))    dfout <- dfout[order(-dfout$sum_agg),]",total for all timecdn_plyr_agg_sum_002,CDN,CN,cdn_plyr_agg_sum_002,Aggregate total sum of C over same periods ,"dfout <- ddply(df, c(""a"",""b""), summarise, sum_agg = sum(c))",total by time slotcn_rbase_cumsum_000,CN,CNN,cn_rbase_cumsum_000,cumulative sum for numeric variable,"dfout <- within(df, c <- cumsum(b))",accumulated NVARcnn_rbase_top_80per_cumsum_001,CNN,CNN,cnn_rbase_top_80per_cumsum_001,cumulative sum for numeric variable filter top 80%,,top 80% of cum NVARcdn_plyr_b_share_000,CDN,CDN,cdn_plyr_b_share_000,returns the distribution of the numberic values of var C over time,,,,,,,,,,,,,,,,,,,,,,,,,,,CCN,CN,,Sums all values of N grouped by C1,"CN <- aggregate(x = list(N = df$N), by = list(C1 = df$C1), FUN=sum)",sum,CCN,CN,,Mean values of N grouped by C1,"CN <- aggregate(x = list(N = df$N), by = list(C1 = df$C1), FUN=mean)",mean,CCN,CN,,Median values of N grouped by C1,"CN <- aggregate(x = list(N = df$N), by = list(C1 = df$C1), FUN=median)",mediancx.cx_rbase_match_000,"(CN,CN)",CNN,cx.cx_rbase_match_000,"Matches value of C and brings the N value of the second dfto the first df","df1$N2 <- df2$N2[match(df1$C,df2$C)]",merge,"(CN,CC)",CCN,,"Matches value of C1 and brings the C2 value of the second dfto the first df","df1$C2 <- df2$C2[match(df1$C1,df2$C1)]",NA,"(CN,CO)",CNO,,"Matches value of C and brings the O value of the second dfto the first df","df1$O <- df2$O[match(df1$C,df2$C)]",NA,"(DN,DN)",DNN,,"Matches value of D and brings the N value of the second dfto the first df","df1$N2 <- df2$N2[match(df1$D,df2$D)]",NA